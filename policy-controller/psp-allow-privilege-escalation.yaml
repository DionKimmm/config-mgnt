# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPAllowPrivilegeEscalationContainer
metadata:
  name: policy-essentials-v2022-psp-allow-privilege-escalation
  labels:
    policycontroller.gke.io/bundleName: policy-essentials-v2022
  annotations:
    policycontroller.gke.io/constraintData: |-
      "{
        bundleName: 'policy-essentials-v2022',
        bundleDisplayName: 'Policy Essentials v2022',
        bundleLink: 'https://github.com/GoogleCloudPlatform/acm-policy-controller-library/tree/master/bundles/policy-essentials-v2022',
        bundleVersion: '202305.2',
        bundleDescription: 'Use the Policy Essentials v2022 policy bundle with Anthos Policy Controller to apply Google recommended best practices to your cluster resources.',
        controlNumbers: '[]',
        severity: 'UNASSIGNED',
        description: 'Restricts containers with `allowPrivilegeEscalation` set to `true`.',
        remediation: 'Containers cannot run with `allowPrivilegeEscalation` set to `true`. Set your containers with `allowPrivilegeEscalation: false`.',
        minimumTemplateLibraryVersion: '1.11.1'
      }"
spec:
  enforcementAction: deny
  match:
    # <list item: object>: The Group and Kind of objects that should be matched.
    # If multiple groups/kinds combinations are specified, an incoming resource
    # need only match one to be in scope.
    kinds:
    - apiGroups:
      - ""
      kinds:
      - Pod
    # excludedNamespaces <array>: `excludedNamespaces` is a list of namespace
    # names. If defined, a constraint only applies to resources not in a listed
    # namespace. ExcludedNamespaces also supports a prefix-based glob.  For
    # example, `excludedNamespaces: [kube-*]` matches both `kube-system` and
    # `kube-public`.
    excludedNamespaces:
    - kube-system
    - istio-system
    - asm-system
    - config-management-system
    - config-management-monitoring
    - resource-group-system
    - cert-manager
    - acm-demo
    - asm-gateway
    - gatekeeper-system
    - gke-connect
    - gmp-public
    - gmp-system
    - kube-public
    - resource-group-system
    # namespaceSelector <object>: `namespaceSelector` is a label selector against
    # an object's containing namespace or the object itself, if the object is a
    # namespace.
    namespaceSelector:
      # matchExpressions <array>: a list of label selection expressions. A selected
      # resource will match all of these expressions.
      matchExpressions:
        # <list item: object>: a selector that specifies a label key, a set of
        # label values, an operator that defines the relationship between the two
        # that will match the selector.
        - # key <string>: the label key that the selector applies to.
          key: constrain
          # operator <string>: the relationship between the label and value set
          # that defines a matching selection.
          # Allowed Values: In, NotIn, Exists, DoesNotExist
          operator: In
          # values <array>: a set of label values.
          values:
            - true
  parameters:
    exemptImages:
    - gcr.io/anthos-baremetal-release/*
